<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper의 namespace를 Mapper Interface로 지정해 준다. -->

<mapper namespace="com.gdu.app11.mapper.EmpMapper">


	<!-- employees와 departments의 조인을 위한 resultMap  -->
	<resultMap type="DeptDTO" id="DeptMap">
		<result column="DEPARTMENT_ID" property="departmentId"/>
		<result column="DEPARTMENT_NAME" property="departmentName"/>
		<result column="MANAGER_ID" property="managerId"/>
		<result column="LOCATION_ID" property="locationId"/>
	</resultMap>
	<resultMap type="EmpDTO" id="EmpMap">
		<result column="EMPLOYEE_ID" property="employeeId"/>
		<result column="FIRST_NAME" property="firstName"/>
		<result column="LAST_NAME" property="lastName"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE_NUMBER" property="phoneNumber"/>
		<result column="HIRE_DATE" property="hireDate"/>
		<result column="JOB_ID" property="jobId"/>
		<result column="SALARY" property="salary"/>
		<result column="COMMISSION_PCT" property="commissionPct"/>
		<result column="MANAGER_ID" property="managerId"/>
		<collection resultMap="DeptMap" property="deptDTO"></collection>
	</resultMap>


	<select id="selectAllEmployeesCount" resultType="int">   <!-- 아이디는 추상메소드 이름이 된다. -->
		SELECT COUNT(*)
			FROM EMPLOYEES
	</select>
	
	<select id="selectEmployeesByPage" parameterType="map" resultMap="EmpMap"><!-- 파라미터타입 생략함 public List<empdto> selectEmployeesByPage(int start, int end);  --><!-- EmpDTO 이거 alias값 -->
	<!-- parameterType="Map" map 도 상관없음 마이바티스가 해석함 -->
	<!-- 파라미터 생략하는 대신, 파라미터 순서대로 #{param1} #{param2} 로 표현가능함 -->
	<!-- <resultMap type="EmpDTO" id="EmpMap">의 id를 resultMap타입에 적어줌 -->
	<!-- resultType -->
        SELECT B.RN, B.*
		FROM (		SELECT ROWNUM AS RN, A.*			<!-- ROWNUM은 별명붙이는게 좋음 -->	
					FROM(	SELECT E.*, D.DEPARTMENT_NAME, D.LOCATION_ID
                                FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D
                                ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
                                ORDER BY HIRE_DATE DESC) A) B
		WHERE B.RN BETWEEN #{start} AND #{end}
		
		<!-- WHERE B.RN BETWEEN '1' AND '10'   #{start} 은 문자갑으로 치환됨.-->
		<!-- WHERE B.RN BETWEEN 1 AND 0 ${start} 은 숫자로 치환됨.-->
		
		
		<!-- where #{column} = #{query} 
			 where 'EMPLOYEE_ID' = '150'  이거 안됨. 컬럼명에 '' 들어가서  -->
		 <!--  
		 	 where ${column} = #{query} 
		 	 where EMPLOYEE_ID = '150'  일케해주면 성공!
		 	 
		 	 변수값은 죄다 #으로 쓰고 칼럼명은 $로 쓰면 댐 ㅇㅋ??????ㅇㅋ
		 -->
		 
		 <!-- 테이블이 다르면 쿼리를 따로 짬 -->
		
	</select>
	<select id="selectFindEmployeesCount" parameterType="Map" resultType="int"><!-- Map엔 칼럼과 쿼리가 들어가있음 -->
		SELECT COUNT(*)
		FROM EMPLOYEES
		<!-- c: 와 비슷해보이는 if -->
		<if test="column=='EMPLOYEE_ID' or olumn=='DEPARTMENT_ID'">WHERE ${column} = #{query}</if> 
		<if test="column=='DEPARTMENT_ID'" or>WHERE "DEPARTMENT_ID==column=='FIRST_NAME'" = #{query}</if>
		<if test="column=='LAST_NAME'">WHERE LAST_NAME LIKE '%' || #{query} || '%'</if>
		<if test=">WHERE FIRST_NAME LIKE '%' || #{query} || '%'</if>
		<if test="column=='PHONE_NUMBER'">WHERE PHONE_NUMBER LIKE '%' || #{query} || '%'</if>
		<if test="column=='HIRE_DATE'">WHERE HIRE_DATE BETWEEN TO_DATE(#{start}, 'YYYY-MM-DD') AND TO_DATE(#{end}, 'YYYY-MM-DD')</if>
		<if test="column=='SALARY'">WHERE SALARY BETWEEN #{start} and #{end}</if>
	
	
	</select>
	
	
	<!-- 애스터리스크 : 칼럼명이 동일하면 오류남.. ambig..어쩌고 -->
	
	
	
	<select id="selectFindEmployees" parameterType="Map" resultType="EmpMap">
	<!-- EmpMap로 반환해야 이름 주소 등등이 EmpMap 포함됨 -->
		SELECT B.*
		FROM(	SELECT ROWNUM AR RN, A.*
				FROM (	SELECT *
						FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
						ON E.DEPARTMENT_ID = E.DEPARTMENT_ID
						ORDER BY HIRE_DATE DESC) A) B
		WHERE B.RN BETWEEN #{begin} AND #{end}
		
		<!-- 미리 다 조인해 놓고 찾는 것 보단 미리 WHERE절로 결과 짤라서 JOIN하는게 성능에 더 좋음 -->
		

	
	
	</select>

</mapper>